{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Samples Basic Code const basic = new headbreaker.Canvas('basic-canvas', { width: 500, height: 300, pieceSize: 50, proximity: 10 }); basic.withPiece({ structure: { right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'a', currentPosition: { x: 50, y: 50 }, color: '#B87D32' } }); basic.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'b', currentPosition: { x: 100, y: 50 }, color: '#B83361' } }); basic.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Slot, left: headbreaker.Tab }, data: { id: 'g', currentPosition: { x: 100, y: 230 } } }); // ... more pieces ... basic.draw();. Demo Soft lines Code const soft = new headbreaker.Canvas('soft-canvas', { width: 500, height: 300, pieceSize: 50, proximity: 10, lineSoftness: 0.2 }); soft.withPiece({ structure: { right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'a', currentPosition: { x: 50, y: 50 }, color: '#B87D32' } }); soft.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'b', currentPosition: { x: 100, y: 50 }, color: '#B83361' } }); soft.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Slot, left: headbreaker.Tab }, data: { id: 'g', currentPosition: { x: 100, y: 230 } } }); // ... more pieces ... soft.draw(); Demo Perfect match Code const perfect = new headbreaker.Canvas('perfect-canvas', { width: 800, height: 300, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 2, strokeColor: '#00200B', lineSoftness: 0.0 }); perfect.withPiece({ structure: { right: headbreaker.Tab, down: headbreaker.Slot }, data: { id: 'a', targetPosition: { x: 100, y: 100 }, color: '#0EC430' } }); perfect.withPiece({ structure: { right: headbreaker.Slot, left: headbreaker.Slot }, data: { id: 'b', targetPosition: { x: 200, y: 100 }, color: '#098520' } }); perfect.withPiece({ structure: { down: headbreaker.Tab, left: headbreaker.Tab }, data: { id: 'c', targetPosition: { x: 330, y: 80 }, color: '#04380D' } }); // ... more pieces ... perfect.draw(); Demo Background Autogenerated Code let xul = new Image(); xul.src = 'static/xul.jpg'; xul.onload = () = { const autogen = new headbreaker.Canvas('autogen-canvas', { width: 800, height: 800, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 1.5, lineSoftness: 0.18, image: xul, }); autogen.withPuzzle({ horizontalPiecesCount: 6, verticalPiecesCount: 5 }); autogen.draw(); } Demo Randomized positions Code let dali = new Image(); dali.src = 'static/dali.jpg'; dali.onload = () = { const randomized = new headbreaker.Canvas('randomized-canvas', { width: 800, height: 800, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 2, lineSoftness: 0.12, image: dali }); randomized.withPuzzle({ insertsGenerator: headbreaker.sequence.flipflop }); randomized.shuffle(0.7); randomized.draw(); } Demo Labels Code const labels = new headbreaker.Canvas('labels-canvas', { width: 400, height: 400, pieceSize: 80, proximity: 25, borderFill: 10, strokeWidth: 2, lineSoftness: 0.18, }); labels.withPiece({ structure: { right: headbreaker.Tab }, data: { id: 'tree-kanji', color: '#23599E', strokeColor: '#18396B', label: { text: '\u6728', fontSize: 70, x: -5, y: 5 } } }); labels.withPiece({ structure: { left: headbreaker.Slot }, data: { id: 'tree-emoji', color: '#EBB34B', strokeColor: '#695024', label: { text: '\ud83c\udf33', fontSize: 70, x: 5, y: 0 } } }); // ... more pieces ... labels.shuffle(0.6); labels.draw(); Demo Sound and visual feedback Code var audio = new Audio('static/connect.wav'); let berni = new Image(); berni.src = 'static/berni.jpg'; berni.onload = () = { const sound = new headbreaker.Canvas('sound-canvas', { width: 800, height: 800, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 1.5, lineSoftness: 0.18, image: berni, strokeColor: 'black' }); sound.withPuzzle({ horizontalPiecesCount: 6, insertsGenerator: headbreaker.sequence.random }); sound.draw(); sound.onConnect((_piece, figure, _target, targetFigure) = { // play sound audio.play(); // paint borders on click // of conecting and conected figures figure.shape.stroke('yellow'); targetFigure.shape.stroke('yellow'); sound.redraw(); setTimeout(() = { // restore border colors // later figure.shape.stroke('black'); targetFigure.shape.stroke('black'); sound.redraw(); }, 200); }); sound.onDisconnect((it) = { audio.play(); }); } Demo Dynamic","title":"Home"},{"location":"#samples","text":"","title":"Samples"},{"location":"#basic","text":"","title":"Basic"},{"location":"#code","text":"const basic = new headbreaker.Canvas('basic-canvas', { width: 500, height: 300, pieceSize: 50, proximity: 10 }); basic.withPiece({ structure: { right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'a', currentPosition: { x: 50, y: 50 }, color: '#B87D32' } }); basic.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'b', currentPosition: { x: 100, y: 50 }, color: '#B83361' } }); basic.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Slot, left: headbreaker.Tab }, data: { id: 'g', currentPosition: { x: 100, y: 230 } } }); // ... more pieces ... basic.draw();.","title":"Code"},{"location":"#demo","text":"","title":"Demo"},{"location":"#soft-lines","text":"","title":"Soft lines"},{"location":"#code_1","text":"const soft = new headbreaker.Canvas('soft-canvas', { width: 500, height: 300, pieceSize: 50, proximity: 10, lineSoftness: 0.2 }); soft.withPiece({ structure: { right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'a', currentPosition: { x: 50, y: 50 }, color: '#B87D32' } }); soft.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Tab, left: headbreaker.Slot }, data: { id: 'b', currentPosition: { x: 100, y: 50 }, color: '#B83361' } }); soft.withPiece({ structure: { up: headbreaker.Slot, right: headbreaker.Tab, down: headbreaker.Slot, left: headbreaker.Tab }, data: { id: 'g', currentPosition: { x: 100, y: 230 } } }); // ... more pieces ... soft.draw();","title":"Code"},{"location":"#demo_1","text":"","title":"Demo"},{"location":"#perfect-match","text":"","title":"Perfect match"},{"location":"#code_2","text":"const perfect = new headbreaker.Canvas('perfect-canvas', { width: 800, height: 300, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 2, strokeColor: '#00200B', lineSoftness: 0.0 }); perfect.withPiece({ structure: { right: headbreaker.Tab, down: headbreaker.Slot }, data: { id: 'a', targetPosition: { x: 100, y: 100 }, color: '#0EC430' } }); perfect.withPiece({ structure: { right: headbreaker.Slot, left: headbreaker.Slot }, data: { id: 'b', targetPosition: { x: 200, y: 100 }, color: '#098520' } }); perfect.withPiece({ structure: { down: headbreaker.Tab, left: headbreaker.Tab }, data: { id: 'c', targetPosition: { x: 330, y: 80 }, color: '#04380D' } }); // ... more pieces ... perfect.draw();","title":"Code"},{"location":"#demo_2","text":"","title":"Demo"},{"location":"#background","text":"","title":"Background"},{"location":"#autogenerated","text":"","title":"Autogenerated"},{"location":"#code_3","text":"let xul = new Image(); xul.src = 'static/xul.jpg'; xul.onload = () = { const autogen = new headbreaker.Canvas('autogen-canvas', { width: 800, height: 800, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 1.5, lineSoftness: 0.18, image: xul, }); autogen.withPuzzle({ horizontalPiecesCount: 6, verticalPiecesCount: 5 }); autogen.draw(); }","title":"Code"},{"location":"#demo_3","text":"","title":"Demo"},{"location":"#randomized-positions","text":"","title":"Randomized positions"},{"location":"#code_4","text":"let dali = new Image(); dali.src = 'static/dali.jpg'; dali.onload = () = { const randomized = new headbreaker.Canvas('randomized-canvas', { width: 800, height: 800, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 2, lineSoftness: 0.12, image: dali }); randomized.withPuzzle({ insertsGenerator: headbreaker.sequence.flipflop }); randomized.shuffle(0.7); randomized.draw(); }","title":"Code"},{"location":"#demo_4","text":"","title":"Demo"},{"location":"#labels","text":"","title":"Labels"},{"location":"#code_5","text":"const labels = new headbreaker.Canvas('labels-canvas', { width: 400, height: 400, pieceSize: 80, proximity: 25, borderFill: 10, strokeWidth: 2, lineSoftness: 0.18, }); labels.withPiece({ structure: { right: headbreaker.Tab }, data: { id: 'tree-kanji', color: '#23599E', strokeColor: '#18396B', label: { text: '\u6728', fontSize: 70, x: -5, y: 5 } } }); labels.withPiece({ structure: { left: headbreaker.Slot }, data: { id: 'tree-emoji', color: '#EBB34B', strokeColor: '#695024', label: { text: '\ud83c\udf33', fontSize: 70, x: 5, y: 0 } } }); // ... more pieces ... labels.shuffle(0.6); labels.draw();","title":"Code"},{"location":"#demo_5","text":"","title":"Demo"},{"location":"#sound-and-visual-feedback","text":"","title":"Sound and visual feedback"},{"location":"#code_6","text":"var audio = new Audio('static/connect.wav'); let berni = new Image(); berni.src = 'static/berni.jpg'; berni.onload = () = { const sound = new headbreaker.Canvas('sound-canvas', { width: 800, height: 800, pieceSize: 100, proximity: 20, borderFill: 10, strokeWidth: 1.5, lineSoftness: 0.18, image: berni, strokeColor: 'black' }); sound.withPuzzle({ horizontalPiecesCount: 6, insertsGenerator: headbreaker.sequence.random }); sound.draw(); sound.onConnect((_piece, figure, _target, targetFigure) = { // play sound audio.play(); // paint borders on click // of conecting and conected figures figure.shape.stroke('yellow'); targetFigure.shape.stroke('yellow'); sound.redraw(); setTimeout(() = { // restore border colors // later figure.shape.stroke('black'); targetFigure.shape.stroke('black'); sound.redraw(); }, 200); }); sound.onDisconnect((it) = { audio.play(); }); }","title":"Code"},{"location":"#demo_6","text":"","title":"Demo"},{"location":"#dynamic","text":"","title":"Dynamic"}]}